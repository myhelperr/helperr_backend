{"version":3,"file":"app.js","sources":["app.ts"],"sourceRoot":"/","sourcesContent":["import express, { Response } from 'express';\r\nimport * as Sentry from '@sentry/node';\r\nimport cors from 'cors';\r\n\r\n// import taskRoutes from './routes/taskRoutes';\r\nimport authRoutes from './routes/authRoute';\r\nimport catchAll404Errors from './middlewares/catchAll404Errors';\r\nimport globalErrorHandler from './middlewares/errorHandler';\r\nimport { connectDatabase } from './configs/prisma';\r\nimport { rateLimiter } from './configs/rateLimitConfig';\r\nimport MorganSetup from './configs/morganConfig';\r\nimport { healthCheck } from './utils/health';\r\n\r\nimport './configs/sentryConfig';\r\n\r\nconst app = express();\r\n\r\n// connect to DB\r\nconnectDatabase();\r\n\r\n// Rate limiting - Apply to all requests\r\napp.use(rateLimiter);\r\n\r\n// Middleware\r\napp.use(cors());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.json());\r\napp.use(MorganSetup);\r\n\r\n// Routes\r\napp.get('/', async (_, res: Response) => {\r\n  res.status(200).send({\r\n    status: 'success',\r\n    message: 'Api is live',\r\n  });\r\n});\r\n\r\napp.use('/health', healthCheck);\r\napp.use('/api/v1/auth', authRoutes);\r\n// app.use('/api/v1/tasks', taskRoutes);\r\n\r\napp.get('/debug-sentry', (_, __) => {\r\n  throw new Error('My first Sentry error!');\r\n});\r\n\r\n// Error handlers\r\nSentry.setupExpressErrorHandler(app); // sentry error handler middleware\r\n\r\napp.use(catchAll404Errors); // Catch all 404 errors...\r\n\r\napp.use(globalErrorHandler); // Catch all errors...\r\n\r\nexport default app;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAA4C;AAC5C,qDAAuC;AACvC,gDAAwB;AAGxB,mEAA4C;AAC5C,wFAAgE;AAChE,8EAA4D;AAC5D,6CAAmD;AACnD,+DAAwD;AACxD,0EAAiD;AACjD,2CAA6C;AAE7C,kCAAgC;AAEhC,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAGtB,IAAA,wBAAe,GAAE,CAAC;AAGlB,GAAG,CAAC,GAAG,CAAC,6BAAW,CAAC,CAAC;AAGrB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAChD,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,sBAAW,CAAC,CAAC;AAGrB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,GAAa,EAAE,EAAE;IACtC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACnB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,aAAa;KACvB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,oBAAW,CAAC,CAAC;AAChC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,mBAAU,CAAC,CAAC;AAGpC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;IACjC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AAGH,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;AAErC,GAAG,CAAC,GAAG,CAAC,2BAAiB,CAAC,CAAC;AAE3B,GAAG,CAAC,GAAG,CAAC,sBAAkB,CAAC,CAAC;AAE5B,kBAAe,GAAG,CAAC","debug_id":"ebb16c16-98db-53af-abcf-df62787e546b"}