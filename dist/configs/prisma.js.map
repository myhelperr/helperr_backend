{"version":3,"file":"prisma.js","sources":["configs/prisma.ts"],"sourceRoot":"/","sourcesContent":["import { PrismaClient } from '@prisma/client';\r\nimport { dbLog } from './loggerConfig';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\n// Database connection function with retry logic\r\nexport const connectDatabase = async (): Promise<void> => {\r\n  const maxRetries = 5;\r\n  const retryDelay = 2000; // 2 seconds between retries\r\n  \r\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n    dbLog.warn(`Attempting to connect to the database (Attempt ${attempt}/${maxRetries})...`);\r\n    try {\r\n      await prisma.$connect();\r\n      dbLog.info('Database connected successfully');\r\n      return; // Success - exit the function\r\n    } catch (error) {\r\n      dbLog.error(`Database connection attempt ${attempt}/${maxRetries} failed: ${error}`);\r\n      \r\n      if (attempt === maxRetries) {\r\n        // Last attempt failed - exit the process\r\n        dbLog.error('All database connection attempts failed. Exiting...');\r\n        process.exit(1);\r\n      }\r\n      \r\n      // Wait before retrying (except on last attempt)\r\n      dbLog.info(`Retrying database connection in ${retryDelay/1000} seconds...`);\r\n      await new Promise(resolve => setTimeout(resolve, retryDelay));\r\n    }\r\n  }\r\n};\r\n\r\n// Graceful shutdown function\r\nexport const disconnectDatabase = async (): Promise<void> => {\r\n  try {\r\n    await prisma.$disconnect();\r\n    dbLog.info('Database disconnected successfully');\r\n  } catch (error) {\r\n    dbLog.error(`Error disconnecting from database: ${error}`);\r\n  }\r\n};\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;;;AAAA,2CAA8C;AAC9C,iDAAuC;AAEvC,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;AAG3B,MAAM,eAAe,GAAG,KAAK,IAAmB,EAAE;IACvD,MAAM,UAAU,GAAG,CAAC,CAAC;IACrB,MAAM,UAAU,GAAG,IAAI,CAAC;IAExB,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,UAAU,EAAE,OAAO,EAAE,EAAE,CAAC;QACvD,oBAAK,CAAC,IAAI,CAAC,kDAAkD,OAAO,IAAI,UAAU,MAAM,CAAC,CAAC;QAC1F,IAAI,CAAC;YACH,MAAM,MAAM,CAAC,QAAQ,EAAE,CAAC;YACxB,oBAAK,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;YAC9C,OAAO;QACT,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,oBAAK,CAAC,KAAK,CAAC,+BAA+B,OAAO,IAAI,UAAU,YAAY,KAAK,EAAE,CAAC,CAAC;YAErF,IAAI,OAAO,KAAK,UAAU,EAAE,CAAC;gBAE3B,oBAAK,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;gBACnE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;YAGD,oBAAK,CAAC,IAAI,CAAC,mCAAmC,UAAU,GAAC,IAAI,aAAa,CAAC,CAAC;YAC5E,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;QAChE,CAAC;IACH,CAAC;AACH,CAAC,CAAC;AAxBW,QAAA,eAAe,mBAwB1B;AAGK,MAAM,kBAAkB,GAAG,KAAK,IAAmB,EAAE;IAC1D,IAAI,CAAC;QACH,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC;QAC3B,oBAAK,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;IACnD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,oBAAK,CAAC,KAAK,CAAC,sCAAsC,KAAK,EAAE,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC,CAAC;AAPW,QAAA,kBAAkB,sBAO7B;AAEF,kBAAe,MAAM,CAAC","debug_id":"d7d6069c-402e-55b9-8ace-292802741d4f"}