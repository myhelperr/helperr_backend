{"version":3,"file":"rateLimitConfig.js","sources":["configs/rateLimitConfig.ts"],"sourceRoot":"/","sourcesContent":["import rateLimit from 'express-rate-limit';\r\nimport { NODE_ENV } from './envConfig';\r\n\r\n// Simple rate limiter for all routes\r\nexport const rateLimiter = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: NODE_ENV === 'prod' ? 100 : 1000, // 100 requests per 15 minutes in production, 1000 in development\r\n  message: {\r\n    status: 'error',\r\n    message: 'Too many requests, please try again later.',\r\n  },\r\n  standardHeaders: true, // Return rate limit info in headers\r\n  legacyHeaders: false, // Disable legacy headers\r\n//   keyGenerator: (req) => {\r\n//     // VPN-friendly: Use IP + User-Agent for better distribution\r\n//     const ip = req.ip || 'unknown';\r\n//     const userAgent = req.get('User-Agent') || 'unknown';\r\n//     const userAgentHash = Buffer.from(userAgent).toString('base64').substring(0, 10);\r\n//     return `${ip}:${userAgentHash}`;\r\n//   },\r\n});\r\n"],"names":[],"mappings":";;;;;;;;AAAA,4EAA2C;AAC3C,2CAAuC;AAG1B,QAAA,WAAW,GAAG,IAAA,4BAAS,EAAC;IACnC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI;IACxB,GAAG,EAAE,oBAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;IACrC,OAAO,EAAE;QACP,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,4CAA4C;KACtD;IACD,eAAe,EAAE,IAAI;IACrB,aAAa,EAAE,KAAK;CAQrB,CAAC,CAAC","debug_id":"af312b00-4492-5816-980c-efc4219ed569"}