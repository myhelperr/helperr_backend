{"version":3,"file":"health.js","sources":["utils/health.ts"],"sourceRoot":"/","sourcesContent":["import { Request, Response } from 'express';\r\nimport prisma from '../configs/prisma';\r\nimport catchAsync from './catchAsync';\r\n\r\n// Format uptime in readable format\r\nconst formatUptime = (seconds: number): string => {\r\n  const days = Math.floor(seconds / 86400);\r\n  const hours = Math.floor((seconds % 86400) / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const secs = Math.floor(seconds % 60);\r\n\r\n  const parts = [];\r\n  if (days > 0) parts.push(`${days}d`);\r\n  if (hours > 0) parts.push(`${hours}h`);\r\n  if (minutes > 0) parts.push(`${minutes}m`);\r\n  if (secs > 0) parts.push(`${secs}s`);\r\n\r\n  return parts.length > 0 ? parts.join(' ') : '0s';\r\n};\r\n\r\n// Check Prisma database connection status\r\nconst checkDatabaseStatus = async (): Promise<'connected' | 'disconnected'> => {\r\n  try {\r\n    await prisma.$queryRaw`SELECT 1`;\r\n    return 'connected';\r\n  } catch (error) {\r\n    return 'disconnected';\r\n  }\r\n};\r\n\r\n// Simple ping function\r\nexport const pingServer = async (\r\n  url: string,\r\n): Promise<'online' | 'offline'> => {\r\n  try {\r\n    const response = await fetch(url);\r\n    return response.ok ? 'online' : 'offline';\r\n  } catch (error) {\r\n    return 'offline';\r\n  }\r\n};\r\n\r\n// Simple health check middleware\r\nexport const healthCheck = catchAsync(async (_: Request, res: Response) => {\r\n  const dbStatus = await checkDatabaseStatus();\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    message: 'Helperr API is healthy',\r\n    timestamp: new Date().toISOString(),\r\n    uptime: formatUptime(Math.floor(process.uptime())),\r\n    database: dbStatus,\r\n    server: 'online',\r\n    memory: {\r\n      used: Math.round(process.memoryUsage().heapUsed / 1024 / 1024) + ' MB',\r\n      total: Math.round(process.memoryUsage().heapTotal / 1024 / 1024) + ' MB',\r\n    },\r\n    environment: process.env.NODE_ENV || 'development',\r\n  });\r\n});\r\n"],"names":[],"mappings":"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","debug_id":"74fde1ec-35ea-5421-8adc-aeb0a9e8585f"}